package spring.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import spring.model.AnswerDto;
import spring.model.AnswerOracleDao;
import spring.model.BoardDto;
import spring.model.BoardOracleDao;

@Controller
public class SampleContentController {
	@Autowired
	private BoardOracleDao dao;
	@Autowired
	private AnswerOracleDao answerDao;
	
	@RequestMapping("/sample/content.do")
	public ModelAndView content(
			@RequestParam int num,
			@RequestParam(value="pageNum",defaultValue="1") String pageNum,
			@RequestParam(value="key",defaultValue="none") String key,
			@RequestParam(value="aPage",defaultValue="1") int aPage
			)
	{
		//key 가 lst 면 조회수 증가
		if(key.equals("lst"))//목록에서 내용보기 할 경우에만 증가
			dao.updateReadcount(num);
		
		//db 로부터 num 에 해당하는 데이타 가져오기
		BoardDto dto=dao.getData(num);		
		
		ModelAndView model=new ModelAndView();
		//model.addObject("num",num);
		
		//댓글 갯수 보내기
		int answer=answerDao.getTotalCount(dto.getNum());
		dto.setAnswer(answer);
		///////////////// 댓글 페이징 처리 /////////////////////
		int totalCount=answer;//해당 게시글에 달린 총 댓글 갯수

		//페이징에 처리에 필요한 변수들
		int perPage=5; //한페이지당 보여지는 댓글의 갯수
		
		int totalPage;//총페이지수
		int startNum;//각페이지당 보여지는 글의 시작번호
		int endNum;
		int perBlock=5; //한블럭당 보여지는 페이지의 개수
		int totalBlock; //총블럭수
		int startPage; //각블럭당 보여지는 페이지의 시작번호
		int endPage;

		//총페이지수,나머지가 있으면 무조건올림
		//총게시글이 37-한페이지 3-12.3333....13페이지
		totalPage=totalCount/perPage+(totalCount%perPage>0?1:0);
		//총블럭수
		totalBlock=totalPage/perBlock+(totalPage%perBlock>0?1:0);

		//각블럭의 시작페이지와 끝페이지
		startPage=(aPage-1)/perBlock*perBlock+1;
		endPage=startPage+perBlock-1;

		//endPage는 totalPage를 넘지않도록 한다
		if(endPage>totalPage)
			endPage=totalPage;

		//각페이지당 불러올 글의 번호
		//1페이지:1~10 2페이지:11~20 3페이지:31-40
		startNum=(aPage-1)*perPage+1;
		endNum=startNum+perPage-1;

		if(endNum>totalCount)
			endNum=totalCount;
	
		//db 에서 필요한만큼 데이타 가져오기
		List<AnswerDto> list=answerDao.getList(num,startNum, endNum);
		
		model.addObject("perPage",perPage);		
		model.addObject("totalCount",totalCount);
		model.addObject("startPage",startPage);
		model.addObject("endPage",endPage); 
		model.addObject("list",list);
		model.addObject("totalPage",totalPage);
		model.addObject("aPage",aPage);
		
		////////////////////////////////////////////////////////
		model.addObject("dto",dto);
		model.addObject("pageNum",pageNum);
		System.out.println("댓글갯수:"+list.size());
		model.setViewName("/2/sample/content");
		return model;
	}
}


